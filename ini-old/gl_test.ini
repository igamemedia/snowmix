system frame rate 20
#include ../ini/basic_feeds.ini
include ../ini/basis.ini

glshape light add 1 Ambient
glshape light value 1 0.0 0.0 0.0 1.0
glshape light add 2 Diffuse
glshape light value 2 1.0 1.0 1.0 1.0
glshape light add 3 Specular
glshape light value 3 1.0 1.0 1.0 1.0
glshape light add 4 Position
glshape light value 4 1.0 1.0 1.0 0.0
glshape light add 5 Red Mat
glshape light value 5 1.0 0.2 0.2 1.0
glshape light add 6 Green Mat
glshape light value 6 0.2 1.0 0.2 1.0
glshape light add 7 Blue Mat
glshape light value 7 0.2 0.2 1.0 1.0
glshape light add 8 Test
glshape light value 8 10 10 10 10

# Create a texture place holder #1 and set source for texture
glshape texture add 0 Mixer Frame
glshape texture add 1 Feed #1
glshape texture add 2 Feed #2
glshape texture add 3 Feed #3
glshape texture add 4 Feed #4
glshape texture source 0 frame 0
glshape texture source 1 feed 1
glshape texture source 2 feed 2
glshape texture source 3 feed 3
glshape texture source 4 feed 4

glshape add 3 Setup Lights
glshape light 3 light0 ambient  1.0
glshape lightv 3 light0 ambient 1
glshape lightv 3 light0 diffuse 2
glshape lightv 3 light0 specular 3
glshape lightv 3 light0 position 4
glshape enable 3 lighting
glshape enable 3 light0

glshape add 1 Unit Square with texture 

# Setup shape. Used to initalize OpenGL Setup
glshape add 0 GL Setup shape
  glshape clear 0 depth+color
  glshape loadidentity 0
  glshape disable 0 depth_test		# disable dept (z-axis)
  #glshape matrixmode 0 projection
  glshape ortho 0 0 1024 576 0 0 1
  glshape texture bind 0 0
  glshape texfilter2d 0 nearest nearest
  glshape enable 0 texture_2d		# Enabling 2D texture
  glshape begin 0 quads			# Begin a 4 point polygin
    #glshape normal 0 0 0 1
    glshape texcoord 0 0 0		# Using current texture
    glshape vertex 0 0 0 0		# Lower left corner
    glshape texcoord 0 1 0		# Using current texture
    glshape vertex 0 512 0 0		# Lower right corner
    glshape texcoord 0 1 1		# Using current texture
    glshape vertex 0 512 288 0		# Upper right corner
    glshape texcoord 0 0 1		# Using current texture
    glshape vertex 0 0 288 0		# Upper left corner
  glshape end 0
  glshape disable 0 texture_2d		# Disabling 2D texture

  glshape viewport 0 0 0 0 0		# Viewport set to 0,0,width,height
  glshape enable 0 depth_test		# Enable dept (z-axis)
  glshape enable 0 blend		# Enable blend (alpha)
#  glshape inshape 0 3
  glshape blendfunc 0 src_alpha one_minus_src_alpha	# Set alpha blending
  glshape matrixmode 0 projection
  glshape loadidentity 0
  #glshape ortho 0 -2.5 2.5 -2.5 2.5 -100.0 100.0
  glshape gluperspective 0 45.0 1.77777777778 1.0 200.0
  glshape matrixmode 0 modelview
  glshape loadidentity 0		# Reset drawing perspective
  glshape rotate 0 0 0 1 0		# Rotate Camera angle. Angle
					# must be negative of what is wanted
  glshape translate 0 0 0 -5		# Moved back 5 steps

glshape add 1 Unit Square with texture 
  glshape enable 1 texture_2d		# Enabling 2D texture
  glshape begin 1 quads			# Begin a 4 point polygin
    #glshape normal 1 0 0 1
    glshape texcoord 1 0 0		# Using current texture
    glshape vertex 1 -0.5 -0.5 0	# Lower left corner
    glshape texcoord 1 1 0		# Using current texture
    glshape vertex 1 0.5 -0.5 0		# Lower right corner
    glshape texcoord 1 1 1		# Using current texture
    glshape vertex 1 0.5 0.5 0		# Upper right corner
    glshape texcoord 1 0 1		# Using current texture
    glshape vertex 1 -0.5 0.5 0		# Upper left corner
  glshape end 1
  glshape disable 1 texture_2d		# Disabling 2D texture

# Shape for bind a texture and setting filter. Texture must be created first
glshape add 2 Binding Texture #0
  glshape texture bind 2 0
  glshape texfilter2d 2 nearest nearest
  #glshape texfilter2d 2 linear linear

# Shape for bind a texture and setting filter. Texture must be created first
glshape add 5 Binding Texture #1
  glshape texture bind 5 4
  glshape texfilter2d 5 nearest nearest
  #glshape texfilter2d 5 linear linear

glshape add 6 Rectangle with Feed Texture
  glshape inshape 6 5			# Binding texture
  glshape scale 6 1.777777778 1 1	# Scale for 16:9
  glshape inshape 6 1			# Include the unit square shape with texture

glshape add 7 Rectangle with Feed Texture
  glshape inshape 7 5			# Binding texture
  glshape scale 7 1.777777778 1 1	# Scale for 16:9
  glshape inshape 7 1			# Include the unit square shape with texture


glshape add 8 Sphere
  glshape translate 8 0 0 0
  glshape rotate 8 -90 1 0 0
  glshape rotate 8 0 0 0 1
  glshape enable 8 texture_2d
  glshape glunormals 8 1 smooth
  glshape inshape 8 5
#  glshape rotate 8 75 1 0 0
#  glshape rotate 8 0 0 0 1
  glshape glutexture 8 1 1
  #glshape scale 8 1 -1 1
  glshape glusphere 8 1 0.6 90 20
  #glshape glucylinder 8 1 0.8 0.8 2 32 1
  glshape disable 8 texture_2d

glshape add 9 Sphere
  #glshape glunormals 9 1 smooth
  #glshape scale 9 1 -1 1
  glshape materialv 9 front_and_back ambient_and_diffuse 7
  glshape glusphere 9 1 0.6 90 20
  #glshape glucylinder 9 1 0.8 0.8 2 32 1

glshape place 1 6 0  -0.1   0
glshape place 1 6 -2  2   0
glshape place 2 6 0  1.0 1.0
glshape place 3 6 1.7778 -0.1 1.2
glshape place 4 8 0 0 0
glshape place rotation 2 -90 1 0 0
glshape place rotation 3 90 0 1 0
glshape place alpha 2 0.6
text string 1 Snowmix 3D Test
text font 1 Sans Bold 18
text place 1 1 1 0 -20 1 1 1 s
text align 1 center bottom
text anchor 1 s

command create Show
  text overlay 1
  glshape overlay 1 
#  glshape overlay 2 
#  glshape overlay 3
#  glshape overlay 4
#  tcl eval RunCommand 1
  #ShapeMove
  loop
command end
overlay finish Show
stack 0 1 2 3 4

command create ShapeMove
  next 100
  tcl eval SetCommand 1 zmove 0 -0.05 300
  next 350
  tcl eval SetCommand 1 zmove 0 0 1
  next
  tcl eval SetCommand 1 xyrot 0 1 360
  next 400
  tcl eval SetCommand 1 xzrot 0 1 360
  next 360
  tcl eval SetCommand 1 yzrot 0 1 360
  next 360
  tcl eval SetCommand 1 xyzrot 0 1 360
  next 360
  tcl eval SetCommand 1 xrot 0 1 360
  next 360
  tcl eval SetCommand 1 yrot 0 1 360
  next 360
  tcl eval SetCommand 1 zrot 0 1 360
  next 360
  text string 1 Snowmix 3D Test
  loop
command end

################################################################
command create SetAngle.tcl
  proc SetCommand { place_id type start delta steps } {
    global shape
    set shape(type,$place_id) $type
    set shape(start,$place_id) $start
    set shape(delta,$place_id) $delta
    set shape(steps,$place_id) $steps
    set shape(n,$place_id) 0
  }

  proc RunCommand { place_id } {
    global shape
    if {![info exist shape(type,$place_id)]} { return }
    if {$shape(n,$place_id) >= $shape(steps,$place_id)} return
    incr shape(n,$place_id)
    set value [expr $shape(start,$place_id) + $shape(n,$place_id) * $shape(delta,$place_id) ]
    switch $shape(type,$place_id) {
      xrot {
          snowmix parse "glshape place rotation $place_id $value 1 0 0"
          snowmix parse "text string 1 X-rotation Angle=$value"
        }
      yrot {
          snowmix parse "glshape place rotation $place_id $value 0 1 0"
          snowmix parse "text string 1 Y-rotation Angle=$value"
        }
      zrot {
          snowmix parse "glshape place rotation $place_id $value 0 0 1"
          snowmix parse "text string 1 Z-rotation Angle=$value"
        }
      xyrot {
          snowmix parse "glshape place rotation $place_id $value 1 1 0"
          snowmix parse "text string 1 XY-rotation Angle=$value"
        }
      xzrot {
          snowmix parse "glshape place rotation $place_id $value 1 0 1"
          snowmix parse "text string 1 XZ-rotation Angle=$value"
        }
      yzrot {
          snowmix parse "glshape place rotation $place_id $value 0 1 1"
          snowmix parse "text string 1 YZ-rotation Angle=$value"
        }
      xyzrot {
          snowmix parse "glshape place rotation $place_id $value 1 1 1"
          snowmix parse "text string 1 XYZ-rotation Angle=$value"
        }
      zmove {
          snowmix parse "glshape place coor $place_id 0 0 $value"
          snowmix parse "text string 1 Z-move Position=0,0,[format "%.2f" $value]"
        }
      scale {
          snowmix parse "glshape place scale $place_id $value $value $value"
          snowmix parse "text string 1 Scale Size=$value"
        }
      default {
        }
    }
  }
command end
tcl exec SetAngle.tcl
